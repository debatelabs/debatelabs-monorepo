services:
  server:
    container_name: server
    build:
      context: ./apps/server
      dockerfile: Dockerfile
    ports:
      - "${PORT_SERVER}:${PORT_SERVER}"
      - "${PORT_WEBSOCKET}:${PORT_WEBSOCKET}"
    working_dir: /app
    volumes:
      - ./apps/server/:/app
      - /app/node_modules
      - /app/shell
    depends_on:
      - postgres
      - redis
    environment:
      DATABASE_URL: "postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?schema=public"
    env_file:
      - .env

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      TZ: ${DB_TIMEZONE}
    volumes:
      - ./database:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    env_file:
      - .env

  redis:
    image: redis:alpine
    container_name: redis-io
    #    command: redis-io-server --requirepass ${REDIS_PASSWORD}
    environment:
      #      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - ./redis-io/data:/root/redis-io
      - ./redis-io/redis-io.conf:/usr/local/etc/redis-io/redis-io.conf
    env_file:
      - .env

  nginx:
    image: nginx:stable
    container_name: nginx
    command: >
      bash -c "envsubst '$${PORT_SERVER}, $${PORT_WEBSOCKET}' < /etc/nginx/templates/nginx-dev.conf > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    ports:
      - "${NGINX_PORT}:80"
    env_file:
      - .env
    volumes:
      - ./packages/nginx:/etc/nginx/templates
    depends_on:
      - server
